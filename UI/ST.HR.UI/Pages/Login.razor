@page "/login/"
@page "/login/{message}"
@inject AuthService AuthService
@inject HttpContextAccessor HttpContextAccessor
@inject NavigationManager NavigationManager

<div class="simple-form">

    <div class="form-group">
        <label for="login">Имя пользователя</label>
        <input @bind="@_username" type="text" class="form-control" id="login" placeholder="Введите имя пользователя"/>
    </div>

    <div class="form-group">
        <label for="password">Пароль</label>
        <input @bind="@_password" type="password" class="form-control" id="password" placeholder="Введите пароль"/>
    </div>

    @if (!string.IsNullOrWhiteSpace(Message))
    {
        <div class="alert alert-danger" role="alert">
            @Message
        </div>
    }

    <a class="ml-md-auto btn btn-primary" href="/login-process?username=@_username&password=@HashHelper.GenerateHash(_password)" target="_top">Login</a>

</div>

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }
    
    [Parameter]
    public string Message { get; set; }
    
    [Parameter]
    public string ReturnUrl { get; set; }
    
    private bool _isLoading;
    
    private string _username = "";
    private string _password = "";

    protected override async Task OnInitializedAsync()
    {
        if (_isLoading)
            return;

        _isLoading = true;

        var user = (await AuthenticationStateTask).User;

        if (user.Identity.IsAuthenticated)
            NavigationManager.NavigateTo("/");
    }
}
